//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KioskFramework.NStationService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NStationService.ServiceSoap")]
    public interface ServiceSoap {
        
        // CODEGEN: Generating message contract since message InsTvmAlarmRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsTvmAlarm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.InsTvmAlarmResponse InsTvmAlarm(KioskFramework.NStationService.InsTvmAlarmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsTvmAlarm", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.InsTvmAlarmResponse> InsTvmAlarmAsync(KioskFramework.NStationService.InsTvmAlarmRequest request);
        
        // CODEGEN: Generating message contract since message UpdTvmMonitoringRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdTvmMonitoring", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.UpdTvmMonitoringResponse UpdTvmMonitoring(KioskFramework.NStationService.UpdTvmMonitoringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdTvmMonitoring", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.UpdTvmMonitoringResponse> UpdTvmMonitoringAsync(KioskFramework.NStationService.UpdTvmMonitoringRequest request);
        
        // CODEGEN: Generating message contract since message InsertMonitoringRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertMonitoring", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.InsertMonitoringResponse InsertMonitoring(KioskFramework.NStationService.InsertMonitoringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertMonitoring", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.InsertMonitoringResponse> InsertMonitoringAsync(KioskFramework.NStationService.InsertMonitoringRequest request);
        
        // CODEGEN: Generating message contract since message ExecuteDMLRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteDML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.ExecuteDMLResponse ExecuteDML(KioskFramework.NStationService.ExecuteDMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteDML", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.ExecuteDMLResponse> ExecuteDMLAsync(KioskFramework.NStationService.ExecuteDMLRequest request);
        
        // CODEGEN: Generating message contract since message ExecuteNonQueryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteNonQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.ExecuteNonQueryResponse ExecuteNonQuery(KioskFramework.NStationService.ExecuteNonQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteNonQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.ExecuteNonQueryResponse> ExecuteNonQueryAsync(KioskFramework.NStationService.ExecuteNonQueryRequest request);
        
        // CODEGEN: Generating message contract since message StationComputerVersionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StationComputerVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.StationComputerVersionResponse StationComputerVersion(KioskFramework.NStationService.StationComputerVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StationComputerVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.StationComputerVersionResponse> StationComputerVersionAsync(KioskFramework.NStationService.StationComputerVersionRequest request);
        
        // CODEGEN: Generating message contract since message SelUnitByUIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelUnitByUID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.SelUnitByUIDResponse SelUnitByUID(KioskFramework.NStationService.SelUnitByUIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelUnitByUID", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.SelUnitByUIDResponse> SelUnitByUIDAsync(KioskFramework.NStationService.SelUnitByUIDRequest request);
        
        // CODEGEN: Generating message contract since message TomLoginControlRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TomLoginControl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.TomLoginControlResponse TomLoginControl(KioskFramework.NStationService.TomLoginControlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TomLoginControl", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.TomLoginControlResponse> TomLoginControlAsync(KioskFramework.NStationService.TomLoginControlRequest request);
        
        // CODEGEN: Generating message contract since message UserAuthForPayPointRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserAuthForPayPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.UserAuthForPayPointResponse UserAuthForPayPoint(KioskFramework.NStationService.UserAuthForPayPointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserAuthForPayPoint", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.UserAuthForPayPointResponse> UserAuthForPayPointAsync(KioskFramework.NStationService.UserAuthForPayPointRequest request);
        
        // CODEGEN: Generating message contract since message UpdUserCommandRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdUserCommand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KioskFramework.NStationService.UpdUserCommandResponse UpdUserCommand(KioskFramework.NStationService.UpdUserCommandRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdUserCommand", ReplyAction="*")]
        System.Threading.Tasks.Task<KioskFramework.NStationService.UpdUserCommandResponse> UpdUserCommandAsync(KioskFramework.NStationService.UpdUserCommandRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WSRequestHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReturnPackage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int resultField;
        
        private string descriptionField;
        
        private System.Data.DataSet dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TvmMonitoring : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string bnrStatusField;
        
        private string speakerStatusField;
        
        private string hopperCoins1Field;
        
        private string hopperCoins2Field;
        
        private string hopperCoins5Field;
        
        private string hopperStatus1Field;
        
        private string hopperStatus2Field;
        
        private string hopperStatus5Field;
        
        private string banknote10Field;
        
        private string banknote20Field;
        
        private int numberOfQrField;
        
        private string qrPrinterStatusField;
        
        private string receiptPrinterStatusField;
        
        private string ledPanelStatusField;
        
        private string doorSensorStatusField;
        
        private int qRSJT_CountField;
        
        private int qRSJT_AmountField;
        
        private int qRRJT_CountField;
        
        private int qRRJT_AmountField;
        
        private int total_CountField;
        
        private int total_AmountField;
        
        private int tvmIdField;
        
        private int stationIdField;
        
        private string appVersionField;
        
        private System.DateTime lastTransactionDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string bnrStatus {
            get {
                return this.bnrStatusField;
            }
            set {
                this.bnrStatusField = value;
                this.RaisePropertyChanged("bnrStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string speakerStatus {
            get {
                return this.speakerStatusField;
            }
            set {
                this.speakerStatusField = value;
                this.RaisePropertyChanged("speakerStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string hopperCoins1 {
            get {
                return this.hopperCoins1Field;
            }
            set {
                this.hopperCoins1Field = value;
                this.RaisePropertyChanged("hopperCoins1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string hopperCoins2 {
            get {
                return this.hopperCoins2Field;
            }
            set {
                this.hopperCoins2Field = value;
                this.RaisePropertyChanged("hopperCoins2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string hopperCoins5 {
            get {
                return this.hopperCoins5Field;
            }
            set {
                this.hopperCoins5Field = value;
                this.RaisePropertyChanged("hopperCoins5");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string hopperStatus1 {
            get {
                return this.hopperStatus1Field;
            }
            set {
                this.hopperStatus1Field = value;
                this.RaisePropertyChanged("hopperStatus1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string hopperStatus2 {
            get {
                return this.hopperStatus2Field;
            }
            set {
                this.hopperStatus2Field = value;
                this.RaisePropertyChanged("hopperStatus2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string hopperStatus5 {
            get {
                return this.hopperStatus5Field;
            }
            set {
                this.hopperStatus5Field = value;
                this.RaisePropertyChanged("hopperStatus5");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string banknote10 {
            get {
                return this.banknote10Field;
            }
            set {
                this.banknote10Field = value;
                this.RaisePropertyChanged("banknote10");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string banknote20 {
            get {
                return this.banknote20Field;
            }
            set {
                this.banknote20Field = value;
                this.RaisePropertyChanged("banknote20");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int numberOfQr {
            get {
                return this.numberOfQrField;
            }
            set {
                this.numberOfQrField = value;
                this.RaisePropertyChanged("numberOfQr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string qrPrinterStatus {
            get {
                return this.qrPrinterStatusField;
            }
            set {
                this.qrPrinterStatusField = value;
                this.RaisePropertyChanged("qrPrinterStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string receiptPrinterStatus {
            get {
                return this.receiptPrinterStatusField;
            }
            set {
                this.receiptPrinterStatusField = value;
                this.RaisePropertyChanged("receiptPrinterStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string ledPanelStatus {
            get {
                return this.ledPanelStatusField;
            }
            set {
                this.ledPanelStatusField = value;
                this.RaisePropertyChanged("ledPanelStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string doorSensorStatus {
            get {
                return this.doorSensorStatusField;
            }
            set {
                this.doorSensorStatusField = value;
                this.RaisePropertyChanged("doorSensorStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public int QRSJT_Count {
            get {
                return this.qRSJT_CountField;
            }
            set {
                this.qRSJT_CountField = value;
                this.RaisePropertyChanged("QRSJT_Count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public int QRSJT_Amount {
            get {
                return this.qRSJT_AmountField;
            }
            set {
                this.qRSJT_AmountField = value;
                this.RaisePropertyChanged("QRSJT_Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public int QRRJT_Count {
            get {
                return this.qRRJT_CountField;
            }
            set {
                this.qRRJT_CountField = value;
                this.RaisePropertyChanged("QRRJT_Count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public int QRRJT_Amount {
            get {
                return this.qRRJT_AmountField;
            }
            set {
                this.qRRJT_AmountField = value;
                this.RaisePropertyChanged("QRRJT_Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public int Total_Count {
            get {
                return this.total_CountField;
            }
            set {
                this.total_CountField = value;
                this.RaisePropertyChanged("Total_Count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public int Total_Amount {
            get {
                return this.total_AmountField;
            }
            set {
                this.total_AmountField = value;
                this.RaisePropertyChanged("Total_Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public int tvmId {
            get {
                return this.tvmIdField;
            }
            set {
                this.tvmIdField = value;
                this.RaisePropertyChanged("tvmId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public int stationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
                this.RaisePropertyChanged("stationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string appVersion {
            get {
                return this.appVersionField;
            }
            set {
                this.appVersionField = value;
                this.RaisePropertyChanged("appVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public System.DateTime lastTransactionDate {
            get {
                return this.lastTransactionDateField;
            }
            set {
                this.lastTransactionDateField = value;
                this.RaisePropertyChanged("lastTransactionDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TvmAlarm : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int stationIdField;
        
        private int deviceNoField;
        
        private int alarmTypeIdField;
        
        private string alarmMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int stationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
                this.RaisePropertyChanged("stationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int deviceNo {
            get {
                return this.deviceNoField;
            }
            set {
                this.deviceNoField = value;
                this.RaisePropertyChanged("deviceNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int alarmTypeId {
            get {
                return this.alarmTypeIdField;
            }
            set {
                this.alarmTypeIdField = value;
                this.RaisePropertyChanged("alarmTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string alarmMessage {
            get {
                return this.alarmMessageField;
            }
            set {
                this.alarmMessageField = value;
                this.RaisePropertyChanged("alarmMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsTvmAlarm", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsTvmAlarmRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public KioskFramework.NStationService.TvmAlarm model;
        
        public InsTvmAlarmRequest() {
        }
        
        public InsTvmAlarmRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, KioskFramework.NStationService.TvmAlarm model) {
            this.WSRequestHeader = WSRequestHeader;
            this.model = model;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsTvmAlarmResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsTvmAlarmResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool InsTvmAlarmResult;
        
        public InsTvmAlarmResponse() {
        }
        
        public InsTvmAlarmResponse(bool InsTvmAlarmResult) {
            this.InsTvmAlarmResult = InsTvmAlarmResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdTvmMonitoring", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdTvmMonitoringRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public KioskFramework.NStationService.TvmMonitoring model;
        
        public UpdTvmMonitoringRequest() {
        }
        
        public UpdTvmMonitoringRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, KioskFramework.NStationService.TvmMonitoring model) {
            this.WSRequestHeader = WSRequestHeader;
            this.model = model;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdTvmMonitoringResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdTvmMonitoringResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdTvmMonitoringResult;
        
        public UpdTvmMonitoringResponse() {
        }
        
        public UpdTvmMonitoringResponse(bool UpdTvmMonitoringResult) {
            this.UpdTvmMonitoringResult = UpdTvmMonitoringResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertMonitoring", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertMonitoringRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string xml;
        
        public InsertMonitoringRequest() {
        }
        
        public InsertMonitoringRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string xml) {
            this.WSRequestHeader = WSRequestHeader;
            this.xml = xml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertMonitoringResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertMonitoringResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string InsertMonitoringResult;
        
        public InsertMonitoringResponse() {
        }
        
        public InsertMonitoringResponse(string InsertMonitoringResult) {
            this.InsertMonitoringResult = InsertMonitoringResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteDML", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteDMLRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string script;
        
        public ExecuteDMLRequest() {
        }
        
        public ExecuteDMLRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string script) {
            this.WSRequestHeader = WSRequestHeader;
            this.script = script;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteDMLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteDMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ExecuteDMLResult;
        
        public ExecuteDMLResponse() {
        }
        
        public ExecuteDMLResponse(int ExecuteDMLResult) {
            this.ExecuteDMLResult = ExecuteDMLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteNonQuery", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteNonQueryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string script;
        
        public ExecuteNonQueryRequest() {
        }
        
        public ExecuteNonQueryRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string script) {
            this.WSRequestHeader = WSRequestHeader;
            this.script = script;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteNonQueryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteNonQueryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet ExecuteNonQueryResult;
        
        public ExecuteNonQueryResponse() {
        }
        
        public ExecuteNonQueryResponse(System.Data.DataSet ExecuteNonQueryResult) {
            this.ExecuteNonQueryResult = ExecuteNonQueryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StationComputerVersion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StationComputerVersionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        public StationComputerVersionRequest() {
        }
        
        public StationComputerVersionRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader) {
            this.WSRequestHeader = WSRequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StationComputerVersionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StationComputerVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string StationComputerVersionResult;
        
        public StationComputerVersionResponse() {
        }
        
        public StationComputerVersionResponse(string StationComputerVersionResult) {
            this.StationComputerVersionResult = StationComputerVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelUnitByUID", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelUnitByUIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string machineUID;
        
        public SelUnitByUIDRequest() {
        }
        
        public SelUnitByUIDRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string machineUID) {
            this.WSRequestHeader = WSRequestHeader;
            this.machineUID = machineUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelUnitByUIDResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelUnitByUIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public KioskFramework.NStationService.ReturnPackage SelUnitByUIDResult;
        
        public SelUnitByUIDResponse() {
        }
        
        public SelUnitByUIDResponse(KioskFramework.NStationService.ReturnPackage SelUnitByUIDResult) {
            this.SelUnitByUIDResult = SelUnitByUIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TomLoginControl", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TomLoginControlRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string user_cd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string channel_cd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int stationId;
        
        public TomLoginControlRequest() {
        }
        
        public TomLoginControlRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string user_cd, string channel_cd, string password, int stationId) {
            this.WSRequestHeader = WSRequestHeader;
            this.user_cd = user_cd;
            this.channel_cd = channel_cd;
            this.password = password;
            this.stationId = stationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TomLoginControlResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TomLoginControlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public KioskFramework.NStationService.ReturnPackage TomLoginControlResult;
        
        public TomLoginControlResponse() {
        }
        
        public TomLoginControlResponse(KioskFramework.NStationService.ReturnPackage TomLoginControlResult) {
            this.TomLoginControlResult = TomLoginControlResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserAuthForPayPoint", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserAuthForPayPointRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int user_UID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string channel_cd;
        
        public UserAuthForPayPointRequest() {
        }
        
        public UserAuthForPayPointRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, int user_UID, string channel_cd) {
            this.WSRequestHeader = WSRequestHeader;
            this.user_UID = user_UID;
            this.channel_cd = channel_cd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserAuthForPayPointResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserAuthForPayPointResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public KioskFramework.NStationService.ReturnPackage UserAuthForPayPointResult;
        
        public UserAuthForPayPointResponse() {
        }
        
        public UserAuthForPayPointResponse(KioskFramework.NStationService.ReturnPackage UserAuthForPayPointResult) {
            this.UserAuthForPayPointResult = UserAuthForPayPointResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdUserCommand", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdUserCommandRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public KioskFramework.NStationService.WSRequestHeader WSRequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int userCommandId;
        
        public UpdUserCommandRequest() {
        }
        
        public UpdUserCommandRequest(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, int userCommandId) {
            this.WSRequestHeader = WSRequestHeader;
            this.userCommandId = userCommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdUserCommandResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdUserCommandResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdUserCommandResult;
        
        public UpdUserCommandResponse() {
        }
        
        public UpdUserCommandResponse(bool UpdUserCommandResult) {
            this.UpdUserCommandResult = UpdUserCommandResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : KioskFramework.NStationService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<KioskFramework.NStationService.ServiceSoap>, KioskFramework.NStationService.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.InsTvmAlarmResponse KioskFramework.NStationService.ServiceSoap.InsTvmAlarm(KioskFramework.NStationService.InsTvmAlarmRequest request) {
            return base.Channel.InsTvmAlarm(request);
        }
        
        public bool InsTvmAlarm(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, KioskFramework.NStationService.TvmAlarm model) {
            KioskFramework.NStationService.InsTvmAlarmRequest inValue = new KioskFramework.NStationService.InsTvmAlarmRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.model = model;
            KioskFramework.NStationService.InsTvmAlarmResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).InsTvmAlarm(inValue);
            return retVal.InsTvmAlarmResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.InsTvmAlarmResponse> KioskFramework.NStationService.ServiceSoap.InsTvmAlarmAsync(KioskFramework.NStationService.InsTvmAlarmRequest request) {
            return base.Channel.InsTvmAlarmAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.InsTvmAlarmResponse> InsTvmAlarmAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, KioskFramework.NStationService.TvmAlarm model) {
            KioskFramework.NStationService.InsTvmAlarmRequest inValue = new KioskFramework.NStationService.InsTvmAlarmRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.model = model;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).InsTvmAlarmAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.UpdTvmMonitoringResponse KioskFramework.NStationService.ServiceSoap.UpdTvmMonitoring(KioskFramework.NStationService.UpdTvmMonitoringRequest request) {
            return base.Channel.UpdTvmMonitoring(request);
        }
        
        public bool UpdTvmMonitoring(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, KioskFramework.NStationService.TvmMonitoring model) {
            KioskFramework.NStationService.UpdTvmMonitoringRequest inValue = new KioskFramework.NStationService.UpdTvmMonitoringRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.model = model;
            KioskFramework.NStationService.UpdTvmMonitoringResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).UpdTvmMonitoring(inValue);
            return retVal.UpdTvmMonitoringResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.UpdTvmMonitoringResponse> KioskFramework.NStationService.ServiceSoap.UpdTvmMonitoringAsync(KioskFramework.NStationService.UpdTvmMonitoringRequest request) {
            return base.Channel.UpdTvmMonitoringAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.UpdTvmMonitoringResponse> UpdTvmMonitoringAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, KioskFramework.NStationService.TvmMonitoring model) {
            KioskFramework.NStationService.UpdTvmMonitoringRequest inValue = new KioskFramework.NStationService.UpdTvmMonitoringRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.model = model;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).UpdTvmMonitoringAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.InsertMonitoringResponse KioskFramework.NStationService.ServiceSoap.InsertMonitoring(KioskFramework.NStationService.InsertMonitoringRequest request) {
            return base.Channel.InsertMonitoring(request);
        }
        
        public string InsertMonitoring(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string xml) {
            KioskFramework.NStationService.InsertMonitoringRequest inValue = new KioskFramework.NStationService.InsertMonitoringRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.xml = xml;
            KioskFramework.NStationService.InsertMonitoringResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).InsertMonitoring(inValue);
            return retVal.InsertMonitoringResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.InsertMonitoringResponse> KioskFramework.NStationService.ServiceSoap.InsertMonitoringAsync(KioskFramework.NStationService.InsertMonitoringRequest request) {
            return base.Channel.InsertMonitoringAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.InsertMonitoringResponse> InsertMonitoringAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string xml) {
            KioskFramework.NStationService.InsertMonitoringRequest inValue = new KioskFramework.NStationService.InsertMonitoringRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.xml = xml;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).InsertMonitoringAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.ExecuteDMLResponse KioskFramework.NStationService.ServiceSoap.ExecuteDML(KioskFramework.NStationService.ExecuteDMLRequest request) {
            return base.Channel.ExecuteDML(request);
        }
        
        public int ExecuteDML(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string script) {
            KioskFramework.NStationService.ExecuteDMLRequest inValue = new KioskFramework.NStationService.ExecuteDMLRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.script = script;
            KioskFramework.NStationService.ExecuteDMLResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).ExecuteDML(inValue);
            return retVal.ExecuteDMLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.ExecuteDMLResponse> KioskFramework.NStationService.ServiceSoap.ExecuteDMLAsync(KioskFramework.NStationService.ExecuteDMLRequest request) {
            return base.Channel.ExecuteDMLAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.ExecuteDMLResponse> ExecuteDMLAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string script) {
            KioskFramework.NStationService.ExecuteDMLRequest inValue = new KioskFramework.NStationService.ExecuteDMLRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.script = script;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).ExecuteDMLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.ExecuteNonQueryResponse KioskFramework.NStationService.ServiceSoap.ExecuteNonQuery(KioskFramework.NStationService.ExecuteNonQueryRequest request) {
            return base.Channel.ExecuteNonQuery(request);
        }
        
        public System.Data.DataSet ExecuteNonQuery(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string script) {
            KioskFramework.NStationService.ExecuteNonQueryRequest inValue = new KioskFramework.NStationService.ExecuteNonQueryRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.script = script;
            KioskFramework.NStationService.ExecuteNonQueryResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).ExecuteNonQuery(inValue);
            return retVal.ExecuteNonQueryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.ExecuteNonQueryResponse> KioskFramework.NStationService.ServiceSoap.ExecuteNonQueryAsync(KioskFramework.NStationService.ExecuteNonQueryRequest request) {
            return base.Channel.ExecuteNonQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.ExecuteNonQueryResponse> ExecuteNonQueryAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string script) {
            KioskFramework.NStationService.ExecuteNonQueryRequest inValue = new KioskFramework.NStationService.ExecuteNonQueryRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.script = script;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).ExecuteNonQueryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.StationComputerVersionResponse KioskFramework.NStationService.ServiceSoap.StationComputerVersion(KioskFramework.NStationService.StationComputerVersionRequest request) {
            return base.Channel.StationComputerVersion(request);
        }
        
        public string StationComputerVersion(KioskFramework.NStationService.WSRequestHeader WSRequestHeader) {
            KioskFramework.NStationService.StationComputerVersionRequest inValue = new KioskFramework.NStationService.StationComputerVersionRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            KioskFramework.NStationService.StationComputerVersionResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).StationComputerVersion(inValue);
            return retVal.StationComputerVersionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.StationComputerVersionResponse> KioskFramework.NStationService.ServiceSoap.StationComputerVersionAsync(KioskFramework.NStationService.StationComputerVersionRequest request) {
            return base.Channel.StationComputerVersionAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.StationComputerVersionResponse> StationComputerVersionAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader) {
            KioskFramework.NStationService.StationComputerVersionRequest inValue = new KioskFramework.NStationService.StationComputerVersionRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).StationComputerVersionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.SelUnitByUIDResponse KioskFramework.NStationService.ServiceSoap.SelUnitByUID(KioskFramework.NStationService.SelUnitByUIDRequest request) {
            return base.Channel.SelUnitByUID(request);
        }
        
        public KioskFramework.NStationService.ReturnPackage SelUnitByUID(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string machineUID) {
            KioskFramework.NStationService.SelUnitByUIDRequest inValue = new KioskFramework.NStationService.SelUnitByUIDRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.machineUID = machineUID;
            KioskFramework.NStationService.SelUnitByUIDResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).SelUnitByUID(inValue);
            return retVal.SelUnitByUIDResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.SelUnitByUIDResponse> KioskFramework.NStationService.ServiceSoap.SelUnitByUIDAsync(KioskFramework.NStationService.SelUnitByUIDRequest request) {
            return base.Channel.SelUnitByUIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.SelUnitByUIDResponse> SelUnitByUIDAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string machineUID) {
            KioskFramework.NStationService.SelUnitByUIDRequest inValue = new KioskFramework.NStationService.SelUnitByUIDRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.machineUID = machineUID;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).SelUnitByUIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.TomLoginControlResponse KioskFramework.NStationService.ServiceSoap.TomLoginControl(KioskFramework.NStationService.TomLoginControlRequest request) {
            return base.Channel.TomLoginControl(request);
        }
        
        public KioskFramework.NStationService.ReturnPackage TomLoginControl(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string user_cd, string channel_cd, string password, int stationId) {
            KioskFramework.NStationService.TomLoginControlRequest inValue = new KioskFramework.NStationService.TomLoginControlRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.user_cd = user_cd;
            inValue.channel_cd = channel_cd;
            inValue.password = password;
            inValue.stationId = stationId;
            KioskFramework.NStationService.TomLoginControlResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).TomLoginControl(inValue);
            return retVal.TomLoginControlResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.TomLoginControlResponse> KioskFramework.NStationService.ServiceSoap.TomLoginControlAsync(KioskFramework.NStationService.TomLoginControlRequest request) {
            return base.Channel.TomLoginControlAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.TomLoginControlResponse> TomLoginControlAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, string user_cd, string channel_cd, string password, int stationId) {
            KioskFramework.NStationService.TomLoginControlRequest inValue = new KioskFramework.NStationService.TomLoginControlRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.user_cd = user_cd;
            inValue.channel_cd = channel_cd;
            inValue.password = password;
            inValue.stationId = stationId;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).TomLoginControlAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.UserAuthForPayPointResponse KioskFramework.NStationService.ServiceSoap.UserAuthForPayPoint(KioskFramework.NStationService.UserAuthForPayPointRequest request) {
            return base.Channel.UserAuthForPayPoint(request);
        }
        
        public KioskFramework.NStationService.ReturnPackage UserAuthForPayPoint(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, int user_UID, string channel_cd) {
            KioskFramework.NStationService.UserAuthForPayPointRequest inValue = new KioskFramework.NStationService.UserAuthForPayPointRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.user_UID = user_UID;
            inValue.channel_cd = channel_cd;
            KioskFramework.NStationService.UserAuthForPayPointResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).UserAuthForPayPoint(inValue);
            return retVal.UserAuthForPayPointResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.UserAuthForPayPointResponse> KioskFramework.NStationService.ServiceSoap.UserAuthForPayPointAsync(KioskFramework.NStationService.UserAuthForPayPointRequest request) {
            return base.Channel.UserAuthForPayPointAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.UserAuthForPayPointResponse> UserAuthForPayPointAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, int user_UID, string channel_cd) {
            KioskFramework.NStationService.UserAuthForPayPointRequest inValue = new KioskFramework.NStationService.UserAuthForPayPointRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.user_UID = user_UID;
            inValue.channel_cd = channel_cd;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).UserAuthForPayPointAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KioskFramework.NStationService.UpdUserCommandResponse KioskFramework.NStationService.ServiceSoap.UpdUserCommand(KioskFramework.NStationService.UpdUserCommandRequest request) {
            return base.Channel.UpdUserCommand(request);
        }
        
        public bool UpdUserCommand(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, int userCommandId) {
            KioskFramework.NStationService.UpdUserCommandRequest inValue = new KioskFramework.NStationService.UpdUserCommandRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.userCommandId = userCommandId;
            KioskFramework.NStationService.UpdUserCommandResponse retVal = ((KioskFramework.NStationService.ServiceSoap)(this)).UpdUserCommand(inValue);
            return retVal.UpdUserCommandResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KioskFramework.NStationService.UpdUserCommandResponse> KioskFramework.NStationService.ServiceSoap.UpdUserCommandAsync(KioskFramework.NStationService.UpdUserCommandRequest request) {
            return base.Channel.UpdUserCommandAsync(request);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.NStationService.UpdUserCommandResponse> UpdUserCommandAsync(KioskFramework.NStationService.WSRequestHeader WSRequestHeader, int userCommandId) {
            KioskFramework.NStationService.UpdUserCommandRequest inValue = new KioskFramework.NStationService.UpdUserCommandRequest();
            inValue.WSRequestHeader = WSRequestHeader;
            inValue.userCommandId = userCommandId;
            return ((KioskFramework.NStationService.ServiceSoap)(this)).UpdUserCommandAsync(inValue);
        }
    }
}
