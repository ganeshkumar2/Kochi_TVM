//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KioskFramework.OccSrv {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnPackage", Namespace="http://schemas.datacontract.org/2004/07/OccLib")]
    [System.SerializableAttribute()]
    public partial class ReturnPackage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataSet DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataSet Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TSelectedTickets", Namespace="http://schemas.datacontract.org/2004/07/OccLib")]
    [System.SerializableAttribute()]
    public partial class TSelectedTickets : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime activeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime activeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int aliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal amountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int countField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string explanationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short peopleCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int rowNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ticketDTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ticketTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int weekendPassTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromId {
            get {
                return this.FromIdField;
            }
            set {
                if ((this.FromIdField.Equals(value) != true)) {
                    this.FromIdField = value;
                    this.RaisePropertyChanged("FromId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketGUID {
            get {
                return this.TicketGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketGUIDField, value) != true)) {
                    this.TicketGUIDField = value;
                    this.RaisePropertyChanged("TicketGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToId {
            get {
                return this.ToIdField;
            }
            set {
                if ((this.ToIdField.Equals(value) != true)) {
                    this.ToIdField = value;
                    this.RaisePropertyChanged("ToId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime activeFrom {
            get {
                return this.activeFromField;
            }
            set {
                if ((this.activeFromField.Equals(value) != true)) {
                    this.activeFromField = value;
                    this.RaisePropertyChanged("activeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime activeTo {
            get {
                return this.activeToField;
            }
            set {
                if ((this.activeToField.Equals(value) != true)) {
                    this.activeToField = value;
                    this.RaisePropertyChanged("activeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int alias {
            get {
                return this.aliasField;
            }
            set {
                if ((this.aliasField.Equals(value) != true)) {
                    this.aliasField = value;
                    this.RaisePropertyChanged("alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                if ((this.amountField.Equals(value) != true)) {
                    this.amountField = value;
                    this.RaisePropertyChanged("amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count {
            get {
                return this.countField;
            }
            set {
                if ((this.countField.Equals(value) != true)) {
                    this.countField = value;
                    this.RaisePropertyChanged("count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string explanation {
            get {
                return this.explanationField;
            }
            set {
                if ((object.ReferenceEquals(this.explanationField, value) != true)) {
                    this.explanationField = value;
                    this.RaisePropertyChanged("explanation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short peopleCount {
            get {
                return this.peopleCountField;
            }
            set {
                if ((this.peopleCountField.Equals(value) != true)) {
                    this.peopleCountField = value;
                    this.RaisePropertyChanged("peopleCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rowNo {
            get {
                return this.rowNoField;
            }
            set {
                if ((this.rowNoField.Equals(value) != true)) {
                    this.rowNoField = value;
                    this.RaisePropertyChanged("rowNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ticketDT {
            get {
                return this.ticketDTField;
            }
            set {
                if ((this.ticketDTField.Equals(value) != true)) {
                    this.ticketDTField = value;
                    this.RaisePropertyChanged("ticketDT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ticketType {
            get {
                return this.ticketTypeField;
            }
            set {
                if ((this.ticketTypeField.Equals(value) != true)) {
                    this.ticketTypeField = value;
                    this.RaisePropertyChanged("ticketType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int weekendPassType {
            get {
                return this.weekendPassTypeField;
            }
            set {
                if ((this.weekendPassTypeField.Equals(value) != true)) {
                    this.weekendPassTypeField = value;
                    this.RaisePropertyChanged("weekendPassType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OccSrv.IOcc")]
    public interface IOcc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/ExecSP", ReplyAction="http://tempuri.org/IOcc/ExecSPResponse")]
        KioskFramework.OccSrv.ReturnPackage ExecSP(string sp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/ExecSP", ReplyAction="http://tempuri.org/IOcc/ExecSPResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> ExecSPAsync(string sp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsQRCodeTicket", ReplyAction="http://tempuri.org/IOcc/InsQRCodeTicketResponse")]
        KioskFramework.OccSrv.ReturnPackage InsQRCodeTicket(System.Data.DataTable tickets, string createMode, int createdStation, int createdDeviceId, int transactionId, long refNo, int createUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsQRCodeTicket", ReplyAction="http://tempuri.org/IOcc/InsQRCodeTicketResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsQRCodeTicketAsync(System.Data.DataTable tickets, string createMode, int createdStation, int createdDeviceId, int transactionId, long refNo, int createUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsTicketTransaction", ReplyAction="http://tempuri.org/IOcc/InsTicketTransactionResponse")]
        KioskFramework.OccSrv.ReturnPackage InsTicketTransaction(long sessionNo, short statusCd, decimal totalAmount, short tranType, short paymentType, decimal cashAmount, decimal creditCardAmount, decimal cashPayment, decimal creditCardPayment, decimal change, int insUserId, int unitId, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsTicketTransaction", ReplyAction="http://tempuri.org/IOcc/InsTicketTransactionResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsTicketTransactionAsync(long sessionNo, short statusCd, decimal totalAmount, short tranType, short paymentType, decimal cashAmount, decimal creditCardAmount, decimal cashPayment, decimal creditCardPayment, decimal change, int insUserId, int unitId, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsQrCodeTicketMobile", ReplyAction="http://tempuri.org/IOcc/InsQrCodeTicketMobileResponse")]
        KioskFramework.OccSrv.ReturnPackage InsQrCodeTicketMobile(KioskFramework.OccSrv.TSelectedTickets[] listTicket, long sessionNo, decimal totalAmoount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsQrCodeTicketMobile", ReplyAction="http://tempuri.org/IOcc/InsQrCodeTicketMobileResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsQrCodeTicketMobileAsync(KioskFramework.OccSrv.TSelectedTickets[] listTicket, long sessionNo, decimal totalAmoount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelTicketPrice", ReplyAction="http://tempuri.org/IOcc/SelTicketPriceResponse")]
        KioskFramework.OccSrv.ReturnPackage SelTicketPrice(string fareMediaCode, string fareMediatype, string fromValue, string toValue, System.DateTime ticketDate, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelTicketPrice", ReplyAction="http://tempuri.org/IOcc/SelTicketPriceResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelTicketPriceAsync(string fareMediaCode, string fareMediatype, string fromValue, string toValue, System.DateTime ticketDate, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelStations", ReplyAction="http://tempuri.org/IOcc/SelStationsResponse")]
        KioskFramework.OccSrv.ReturnPackage SelStations(string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelStations", ReplyAction="http://tempuri.org/IOcc/SelStationsResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelStationsAsync(string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelQRCodeTicket", ReplyAction="http://tempuri.org/IOcc/SelQRCodeTicketResponse")]
        KioskFramework.OccSrv.ReturnPackage SelQRCodeTicket(string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelQRCodeTicket", ReplyAction="http://tempuri.org/IOcc/SelQRCodeTicketResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelQRCodeTicketAsync(string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelLastTransactionSalePoint", ReplyAction="http://tempuri.org/IOcc/SelLastTransactionSalePointResponse")]
        KioskFramework.OccSrv.ReturnPackage SelLastTransactionSalePoint(int salePointId, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelLastTransactionSalePoint", ReplyAction="http://tempuri.org/IOcc/SelLastTransactionSalePointResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelLastTransactionSalePointAsync(int salePointId, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/CalculatePenAmount", ReplyAction="http://tempuri.org/IOcc/CalculatePenAmountResponse")]
        KioskFramework.OccSrv.ReturnPackage CalculatePenAmount(string penaltyDesc, string fareMedia, int stationId, string ticketId, int salePointId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/CalculatePenAmount", ReplyAction="http://tempuri.org/IOcc/CalculatePenAmountResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> CalculatePenAmountAsync(string penaltyDesc, string fareMedia, int stationId, string ticketId, int salePointId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdQRReplacement", ReplyAction="http://tempuri.org/IOcc/UpdQRReplacementResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdQRReplacement(string oldTicketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdQRReplacement", ReplyAction="http://tempuri.org/IOcc/UpdQRReplacementResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdQRReplacementAsync(string oldTicketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdCancelTicket", ReplyAction="http://tempuri.org/IOcc/UpdCancelTicketResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdCancelTicket(string recIdList, long transactionId, int tranType, decimal cancelAmount, string paymentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdCancelTicket", ReplyAction="http://tempuri.org/IOcc/UpdCancelTicketResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdCancelTicketAsync(string recIdList, long transactionId, int tranType, decimal cancelAmount, string paymentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelRefundTicket", ReplyAction="http://tempuri.org/IOcc/SelRefundTicketResponse")]
        KioskFramework.OccSrv.ReturnPackage SelRefundTicket(string alias, int createStationId, int workMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelRefundTicket", ReplyAction="http://tempuri.org/IOcc/SelRefundTicketResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelRefundTicketAsync(string alias, int createStationId, int workMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelRefund", ReplyAction="http://tempuri.org/IOcc/SelRefundResponse")]
        KioskFramework.OccSrv.ReturnPackage SelRefund(string alias, int createStationId, int workMode, int refundEntryMin, int refundSurcharge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelRefund", ReplyAction="http://tempuri.org/IOcc/SelRefundResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelRefundAsync(string alias, int createStationId, int workMode, int refundEntryMin, int refundSurcharge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdRefundTicket", ReplyAction="http://tempuri.org/IOcc/UpdRefundTicketResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdRefundTicket(string ticketId, int stationId, int unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdRefundTicket", ReplyAction="http://tempuri.org/IOcc/UpdRefundTicketResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdRefundTicketAsync(string ticketId, int stationId, int unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdAdjustment", ReplyAction="http://tempuri.org/IOcc/UpdAdjustmentResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdAdjustment(string ticketId, int stationId, string adjustmentType, int peopleCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdAdjustment", ReplyAction="http://tempuri.org/IOcc/UpdAdjustmentResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdAdjustmentAsync(string ticketId, int stationId, string adjustmentType, int peopleCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelAdjustment", ReplyAction="http://tempuri.org/IOcc/SelAdjustmentResponse")]
        KioskFramework.OccSrv.ReturnPackage SelAdjustment(string alias, int stationIdint, int paidArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelAdjustment", ReplyAction="http://tempuri.org/IOcc/SelAdjustmentResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelAdjustmentAsync(string alias, int stationIdint, int paidArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelAdjustmentTicket", ReplyAction="http://tempuri.org/IOcc/SelAdjustmentTicketResponse")]
        KioskFramework.OccSrv.ReturnPackage SelAdjustmentTicket(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelAdjustmentTicket", ReplyAction="http://tempuri.org/IOcc/SelAdjustmentTicketResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelAdjustmentTicketAsync(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelAdjustmentTicketWithMinEntry", ReplyAction="http://tempuri.org/IOcc/SelAdjustmentTicketWithMinEntryResponse")]
        KioskFramework.OccSrv.ReturnPackage SelAdjustmentTicketWithMinEntry(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation, int adjMinEntryTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelAdjustmentTicketWithMinEntry", ReplyAction="http://tempuri.org/IOcc/SelAdjustmentTicketWithMinEntryResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelAdjustmentTicketWithMinEntryAsync(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation, int adjMinEntryTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelTicketHistory", ReplyAction="http://tempuri.org/IOcc/SelTicketHistoryResponse")]
        KioskFramework.OccSrv.ReturnPackage SelTicketHistory(string alias, string lang, string mediaType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/SelTicketHistory", ReplyAction="http://tempuri.org/IOcc/SelTicketHistoryResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelTicketHistoryAsync(string alias, string lang, string mediaType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdQRVerify", ReplyAction="http://tempuri.org/IOcc/UpdQRVerifyResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdQRVerify(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdQRVerify", ReplyAction="http://tempuri.org/IOcc/UpdQRVerifyResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdQRVerifyAsync(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdQRVerifyWithPeopleCnt", ReplyAction="http://tempuri.org/IOcc/UpdQRVerifyWithPeopleCntResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdQRVerifyWithPeopleCnt(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal Amount, short peopleCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdQRVerifyWithPeopleCnt", ReplyAction="http://tempuri.org/IOcc/UpdQRVerifyWithPeopleCntResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdQRVerifyWithPeopleCntAsync(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal Amount, short peopleCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdTicketForFreeExit", ReplyAction="http://tempuri.org/IOcc/UpdTicketForFreeExitResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdTicketForFreeExit(string ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdTicketForFreeExit", ReplyAction="http://tempuri.org/IOcc/UpdTicketForFreeExitResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdTicketForFreeExitAsync(string ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdTicketForFreeExitWithStation", ReplyAction="http://tempuri.org/IOcc/UpdTicketForFreeExitWithStationResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdTicketForFreeExitWithStation(string ticketId, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdTicketForFreeExitWithStation", ReplyAction="http://tempuri.org/IOcc/UpdTicketForFreeExitWithStationResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdTicketForFreeExitWithStationAsync(string ticketId, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsAdjustment", ReplyAction="http://tempuri.org/IOcc/InsAdjustmentResponse")]
        KioskFramework.OccSrv.ReturnPackage InsAdjustment(string ticketId, int typeId, int stationId, int salePointId, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsAdjustment", ReplyAction="http://tempuri.org/IOcc/InsAdjustmentResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsAdjustmentAsync(string ticketId, int typeId, int stationId, int salePointId, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsTrxHistory", ReplyAction="http://tempuri.org/IOcc/InsTrxHistoryResponse")]
        KioskFramework.OccSrv.ReturnPackage InsTrxHistory(string ticketId, int typeId, int subTypeId, int stationId, int salePointId, decimal amount, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/InsTrxHistory", ReplyAction="http://tempuri.org/IOcc/InsTrxHistoryResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsTrxHistoryAsync(string ticketId, int typeId, int subTypeId, int stationId, int salePointId, decimal amount, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdRefundTicketWithAmount", ReplyAction="http://tempuri.org/IOcc/UpdRefundTicketWithAmountResponse")]
        KioskFramework.OccSrv.ReturnPackage UpdRefundTicketWithAmount(string ticketId, int stationId, int unitId, decimal ticketAmount, decimal surcharge, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOcc/UpdRefundTicketWithAmount", ReplyAction="http://tempuri.org/IOcc/UpdRefundTicketWithAmountResponse")]
        System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdRefundTicketWithAmountAsync(string ticketId, int stationId, int unitId, decimal ticketAmount, decimal surcharge, int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOccChannel : KioskFramework.OccSrv.IOcc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OccClient : System.ServiceModel.ClientBase<KioskFramework.OccSrv.IOcc>, KioskFramework.OccSrv.IOcc {
        
        public OccClient() {
        }
        
        public OccClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OccClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OccClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OccClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KioskFramework.OccSrv.ReturnPackage ExecSP(string sp) {
            return base.Channel.ExecSP(sp);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> ExecSPAsync(string sp) {
            return base.Channel.ExecSPAsync(sp);
        }
        
        public KioskFramework.OccSrv.ReturnPackage InsQRCodeTicket(System.Data.DataTable tickets, string createMode, int createdStation, int createdDeviceId, int transactionId, long refNo, int createUserId) {
            return base.Channel.InsQRCodeTicket(tickets, createMode, createdStation, createdDeviceId, transactionId, refNo, createUserId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsQRCodeTicketAsync(System.Data.DataTable tickets, string createMode, int createdStation, int createdDeviceId, int transactionId, long refNo, int createUserId) {
            return base.Channel.InsQRCodeTicketAsync(tickets, createMode, createdStation, createdDeviceId, transactionId, refNo, createUserId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage InsTicketTransaction(long sessionNo, short statusCd, decimal totalAmount, short tranType, short paymentType, decimal cashAmount, decimal creditCardAmount, decimal cashPayment, decimal creditCardPayment, decimal change, int insUserId, int unitId, int stationId) {
            return base.Channel.InsTicketTransaction(sessionNo, statusCd, totalAmount, tranType, paymentType, cashAmount, creditCardAmount, cashPayment, creditCardPayment, change, insUserId, unitId, stationId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsTicketTransactionAsync(long sessionNo, short statusCd, decimal totalAmount, short tranType, short paymentType, decimal cashAmount, decimal creditCardAmount, decimal cashPayment, decimal creditCardPayment, decimal change, int insUserId, int unitId, int stationId) {
            return base.Channel.InsTicketTransactionAsync(sessionNo, statusCd, totalAmount, tranType, paymentType, cashAmount, creditCardAmount, cashPayment, creditCardPayment, change, insUserId, unitId, stationId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage InsQrCodeTicketMobile(KioskFramework.OccSrv.TSelectedTickets[] listTicket, long sessionNo, decimal totalAmoount) {
            return base.Channel.InsQrCodeTicketMobile(listTicket, sessionNo, totalAmoount);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsQrCodeTicketMobileAsync(KioskFramework.OccSrv.TSelectedTickets[] listTicket, long sessionNo, decimal totalAmoount) {
            return base.Channel.InsQrCodeTicketMobileAsync(listTicket, sessionNo, totalAmoount);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelTicketPrice(string fareMediaCode, string fareMediatype, string fromValue, string toValue, System.DateTime ticketDate, string lang) {
            return base.Channel.SelTicketPrice(fareMediaCode, fareMediatype, fromValue, toValue, ticketDate, lang);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelTicketPriceAsync(string fareMediaCode, string fareMediatype, string fromValue, string toValue, System.DateTime ticketDate, string lang) {
            return base.Channel.SelTicketPriceAsync(fareMediaCode, fareMediatype, fromValue, toValue, ticketDate, lang);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelStations(string lang) {
            return base.Channel.SelStations(lang);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelStationsAsync(string lang) {
            return base.Channel.SelStationsAsync(lang);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelQRCodeTicket(string lang) {
            return base.Channel.SelQRCodeTicket(lang);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelQRCodeTicketAsync(string lang) {
            return base.Channel.SelQRCodeTicketAsync(lang);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelLastTransactionSalePoint(int salePointId, int stationId) {
            return base.Channel.SelLastTransactionSalePoint(salePointId, stationId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelLastTransactionSalePointAsync(int salePointId, int stationId) {
            return base.Channel.SelLastTransactionSalePointAsync(salePointId, stationId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage CalculatePenAmount(string penaltyDesc, string fareMedia, int stationId, string ticketId, int salePointId, int userId) {
            return base.Channel.CalculatePenAmount(penaltyDesc, fareMedia, stationId, ticketId, salePointId, userId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> CalculatePenAmountAsync(string penaltyDesc, string fareMedia, int stationId, string ticketId, int salePointId, int userId) {
            return base.Channel.CalculatePenAmountAsync(penaltyDesc, fareMedia, stationId, ticketId, salePointId, userId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdQRReplacement(string oldTicketId) {
            return base.Channel.UpdQRReplacement(oldTicketId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdQRReplacementAsync(string oldTicketId) {
            return base.Channel.UpdQRReplacementAsync(oldTicketId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdCancelTicket(string recIdList, long transactionId, int tranType, decimal cancelAmount, string paymentType) {
            return base.Channel.UpdCancelTicket(recIdList, transactionId, tranType, cancelAmount, paymentType);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdCancelTicketAsync(string recIdList, long transactionId, int tranType, decimal cancelAmount, string paymentType) {
            return base.Channel.UpdCancelTicketAsync(recIdList, transactionId, tranType, cancelAmount, paymentType);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelRefundTicket(string alias, int createStationId, int workMode) {
            return base.Channel.SelRefundTicket(alias, createStationId, workMode);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelRefundTicketAsync(string alias, int createStationId, int workMode) {
            return base.Channel.SelRefundTicketAsync(alias, createStationId, workMode);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelRefund(string alias, int createStationId, int workMode, int refundEntryMin, int refundSurcharge) {
            return base.Channel.SelRefund(alias, createStationId, workMode, refundEntryMin, refundSurcharge);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelRefundAsync(string alias, int createStationId, int workMode, int refundEntryMin, int refundSurcharge) {
            return base.Channel.SelRefundAsync(alias, createStationId, workMode, refundEntryMin, refundSurcharge);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdRefundTicket(string ticketId, int stationId, int unitId) {
            return base.Channel.UpdRefundTicket(ticketId, stationId, unitId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdRefundTicketAsync(string ticketId, int stationId, int unitId) {
            return base.Channel.UpdRefundTicketAsync(ticketId, stationId, unitId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdAdjustment(string ticketId, int stationId, string adjustmentType, int peopleCount) {
            return base.Channel.UpdAdjustment(ticketId, stationId, adjustmentType, peopleCount);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdAdjustmentAsync(string ticketId, int stationId, string adjustmentType, int peopleCount) {
            return base.Channel.UpdAdjustmentAsync(ticketId, stationId, adjustmentType, peopleCount);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelAdjustment(string alias, int stationIdint, int paidArea) {
            return base.Channel.SelAdjustment(alias, stationIdint, paidArea);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelAdjustmentAsync(string alias, int stationIdint, int paidArea) {
            return base.Channel.SelAdjustmentAsync(alias, stationIdint, paidArea);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelAdjustmentTicket(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation) {
            return base.Channel.SelAdjustmentTicket(alias, stationIdint, paidArea, adjOvertravelQR, adjOverstaySurcharge, adjOverstayMaxSurcharge, adjOverstayTotalMin, adjOverstaySameStation);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelAdjustmentTicketAsync(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation) {
            return base.Channel.SelAdjustmentTicketAsync(alias, stationIdint, paidArea, adjOvertravelQR, adjOverstaySurcharge, adjOverstayMaxSurcharge, adjOverstayTotalMin, adjOverstaySameStation);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelAdjustmentTicketWithMinEntry(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation, int adjMinEntryTime) {
            return base.Channel.SelAdjustmentTicketWithMinEntry(alias, stationIdint, paidArea, adjOvertravelQR, adjOverstaySurcharge, adjOverstayMaxSurcharge, adjOverstayTotalMin, adjOverstaySameStation, adjMinEntryTime);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelAdjustmentTicketWithMinEntryAsync(string alias, int stationIdint, int paidArea, int adjOvertravelQR, int adjOverstaySurcharge, int adjOverstayMaxSurcharge, int adjOverstayTotalMin, int adjOverstaySameStation, int adjMinEntryTime) {
            return base.Channel.SelAdjustmentTicketWithMinEntryAsync(alias, stationIdint, paidArea, adjOvertravelQR, adjOverstaySurcharge, adjOverstayMaxSurcharge, adjOverstayTotalMin, adjOverstaySameStation, adjMinEntryTime);
        }
        
        public KioskFramework.OccSrv.ReturnPackage SelTicketHistory(string alias, string lang, string mediaType) {
            return base.Channel.SelTicketHistory(alias, lang, mediaType);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> SelTicketHistoryAsync(string alias, string lang, string mediaType) {
            return base.Channel.SelTicketHistoryAsync(alias, lang, mediaType);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdQRVerify(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal amount) {
            return base.Channel.UpdQRVerify(ticketId, tranType, qrcDT, ticketType, stationIn, stationOut, amount);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdQRVerifyAsync(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal amount) {
            return base.Channel.UpdQRVerifyAsync(ticketId, tranType, qrcDT, ticketType, stationIn, stationOut, amount);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdQRVerifyWithPeopleCnt(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal Amount, short peopleCnt) {
            return base.Channel.UpdQRVerifyWithPeopleCnt(ticketId, tranType, qrcDT, ticketType, stationIn, stationOut, Amount, peopleCnt);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdQRVerifyWithPeopleCntAsync(string ticketId, int tranType, System.DateTime qrcDT, int ticketType, int stationIn, int stationOut, decimal Amount, short peopleCnt) {
            return base.Channel.UpdQRVerifyWithPeopleCntAsync(ticketId, tranType, qrcDT, ticketType, stationIn, stationOut, Amount, peopleCnt);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdTicketForFreeExit(string ticketId) {
            return base.Channel.UpdTicketForFreeExit(ticketId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdTicketForFreeExitAsync(string ticketId) {
            return base.Channel.UpdTicketForFreeExitAsync(ticketId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdTicketForFreeExitWithStation(string ticketId, int stationId) {
            return base.Channel.UpdTicketForFreeExitWithStation(ticketId, stationId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdTicketForFreeExitWithStationAsync(string ticketId, int stationId) {
            return base.Channel.UpdTicketForFreeExitWithStationAsync(ticketId, stationId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage InsAdjustment(string ticketId, int typeId, int stationId, int salePointId, decimal amount) {
            return base.Channel.InsAdjustment(ticketId, typeId, stationId, salePointId, amount);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsAdjustmentAsync(string ticketId, int typeId, int stationId, int salePointId, decimal amount) {
            return base.Channel.InsAdjustmentAsync(ticketId, typeId, stationId, salePointId, amount);
        }
        
        public KioskFramework.OccSrv.ReturnPackage InsTrxHistory(string ticketId, int typeId, int subTypeId, int stationId, int salePointId, decimal amount, int userId) {
            return base.Channel.InsTrxHistory(ticketId, typeId, subTypeId, stationId, salePointId, amount, userId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> InsTrxHistoryAsync(string ticketId, int typeId, int subTypeId, int stationId, int salePointId, decimal amount, int userId) {
            return base.Channel.InsTrxHistoryAsync(ticketId, typeId, subTypeId, stationId, salePointId, amount, userId);
        }
        
        public KioskFramework.OccSrv.ReturnPackage UpdRefundTicketWithAmount(string ticketId, int stationId, int unitId, decimal ticketAmount, decimal surcharge, int userId) {
            return base.Channel.UpdRefundTicketWithAmount(ticketId, stationId, unitId, ticketAmount, surcharge, userId);
        }
        
        public System.Threading.Tasks.Task<KioskFramework.OccSrv.ReturnPackage> UpdRefundTicketWithAmountAsync(string ticketId, int stationId, int unitId, decimal ticketAmount, decimal surcharge, int userId) {
            return base.Channel.UpdRefundTicketWithAmountAsync(ticketId, stationId, unitId, ticketAmount, surcharge, userId);
        }
    }
}
